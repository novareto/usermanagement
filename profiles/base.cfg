[buildout]
parts =
    zcml
    app
    py
    run
    deploy_ini
    instance
    omelette

extends = 
    https://raw.github.com/goschtl/uvclight/master/requirements/uvclight_1.0.cfg
    versions.cfg
versions = versions
find-links = http://pypi.dolmen-project.org/find-links
newest = false
unzip = true
extensions =
   buildout.eggtractor

extensions =
    mr.developer
    buildout.eggtractor
    buildout.dumppickedversions

tractor-src-directory = src
tractor-target-parts = app 

auto-checkout = *


[sources]
sqlusers             = git https://github.com/novareto/sqlusers.git
uvclight             = git https://github.com/goschtl/uvclight.git
uvc.design.canvas    = git https://github.com/novareto/uvc.design.canvas.git
uvc.entities         = git https://github.com/novareto/uvc.entities.git
uvc.themes.btwidgets = git https://github.com/novareto/uvc.themes.btwidgets.git
siguvtheme.resources = git https://github.com/novareto/siguvtheme.resources.git
siguvtheme.uvclight  = git https://github.com/novareto/siguvtheme.uvclight.git
ul.browser           = git https://github.com/novareto/ul.browser.git
ul.content           = git https://github.com/novareto/ul.content.git
ul.auth              = git https://github.com/novareto/ul.auth.git
ul.sql               = git https://github.com/novareto/ul.sql.git
uvc.content          = git https://github.com/novareto/uvc.content.git
uvc.api              = svn https://uvcsite.googlecode.com/svn/hybrid/uvc.api/trunk
dolmen.sqlcontainer  = git https://github.com/Cromlech/dolmen.sqlcontainer.git


[app]
recipe = z3c.recipe.scripts
secret = coincoin
tmp = ${buildout:directory}/var/tmp
cachedir = ${buildout:directory}/var/cache
eggs =
     Beaker
     Paste
     PasteDeploy
     PasteScript
     transaction
     sqlusers
     fanstatic

[py]
recipe = z3c.recipe.scripts
interpreter = py
eggs = ${app:eggs}


[zcml]
recipe = collective.recipe.template
input = etc/app.zcml.in
output = ${buildout:parts-directory}/etc/app.zcml
extra =
    <include package="sqlusers" />

[run]
recipe = z3c.recipe.mkdir
paths = ${app:tmp}
        ${app:cachedir}
        ${deploy_ini:storage}

[deploy_ini]
recipe = collective.recipe.template
input = etc/deploy.ini.in
output = ${buildout:directory}/parts/etc/deploy.ini
storage = ${buildout:directory}/var

[instance]
recipe = collective.recipe.scriptgen
cmd = ${buildout:bin-directory}/paster
environment = CHAMELEON_CACHE=${app:cachedir}
arguments = serve ${deploy_ini:output}

[omelette]
recipe = collective.recipe.omelette
eggs = ${app:eggs}
